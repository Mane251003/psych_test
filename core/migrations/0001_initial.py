# Generated by Django 5.1.5 on 2025-03-08 19:29

import core.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Resulttttt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=100)),
                ('neuroticism_score', models.FloatField(default=0)),
                ('neuroticism_yes', models.FloatField(default=0)),
                ('neuroticism_no', models.FloatField(default=0)),
                ('extroversion_score', models.FloatField(default=0)),
                ('extroversion_yes', models.FloatField(default=0)),
                ('extroversion_no', models.FloatField(default=0)),
                ('psychoticism_score', models.FloatField(default=0)),
                ('psychoticism_yes', models.FloatField(default=0)),
                ('psychoticism_no', models.FloatField(default=0)),
                ('sincerity_score', models.FloatField(default=0)),
                ('sincerity_yes', models.FloatField(default=0)),
                ('sincerity_no', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PsychoTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('test_type', models.CharField(choices=[('BIG5', 'Big 5 Personality'), ('MBTI', 'Myers-Briggs Type Indicator'), ('HOGAN', 'Hogan Personality Inventory')], max_length=10)),
                ('description', models.TextField()),
                ('low_range', models.TextField(help_text='Description for scores')),
                ('mid_range', models.TextField(help_text='Description for scores 40-60%')),
                ('high_range', models.TextField(help_text='Description for scores 60-100%')),
                ('reverse_scored', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('order', models.PositiveBigIntegerField(default=0)),
                ('trait', models.CharField(choices=[('neuroticism', 'Neuroticism'), ('extroversion', 'Extroversion'), ('psychoticism', 'Psychoticism'), ('sincerity', 'Sincerity'), ('openness', 'Openness')], max_length=50)),
                ('key', models.CharField(choices=[('+', 'Positive'), ('-', 'Negative')], max_length=1)),
                ('weight', models.FloatField(default=1.0)),
                ('question_type', models.CharField(choices=[('yes_no', 'YES/NO'), ('multiple_choice', 'Multiple Choice'), ('open_text', 'Open Text'), ('rating_scale', '1-10 Rating Scale')], default='yes_no', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('scale_min', models.IntegerField(blank=True, default=1, null=True, verbose_name='Նվազագույն բալ')),
                ('scale_max', models.IntegerField(blank=True, default=10, null=True, verbose_name='Մաքսիմալ բալ')),
                ('multiple_choices', models.JSONField(blank=True, help_text='Մուտքագրեք ընտրանքները JSON ձևաչափով, օր. ["Տարբերակ 1", "Տարբերակ 2"]', null=True, validators=[core.models.validate_options])),
                ('open_text_prompt', models.TextField(blank=True, help_text='Մուտքագրեք հարցի հրահանգները', null=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.psychotest')),
            ],
            options={
                'verbose_name': 'Assessment Question',
                'verbose_name_plural': 'Assessment Questions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=100)),
                ('choice', models.CharField(max_length=250)),
                ('value', models.IntegerField()),
                ('description', models.TextField(blank=True)),
                ('test_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.question')),
            ],
        ),
        migrations.CreateModel(
            name='TestSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.psychotest')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theoretical_scores', models.JSONField(default=dict)),
                ('scenario_analysis', models.JSONField(default=dict)),
                ('scale_evaluations', models.JSONField(default=dict)),
                ('free_response_analysis', models.TextField(blank=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.testsession')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(blank=True, max_length=250, null=True)),
                ('scale_value', models.IntegerField(blank=True, null=True)),
                ('scenario_analysis', models.JSONField(blank=True, null=True)),
                ('response_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_responses', to='core.question')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='core.testsession')),
            ],
            options={
                'unique_together': {('session', 'question')},
            },
        ),
    ]
